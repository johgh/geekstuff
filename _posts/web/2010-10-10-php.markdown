---
layout: post
title:  "PHP"
permalink:  "php"
date:   2014-12-25 16:30:15
category: WebDev
tags: Web
---
# Quick reference

## Arrays
[array_intersect](http://php.net/manual/en/function.array-intersect.php)
: ~~~php
    array array_intersect ( array $array1 , array $array2 [, array $... ] )
~~~

[array_merge](http://php.net/manual/en/function.array-merge.php)
: ~~~php
 array array_merge ( array $array1 [, array $... ] )
~~~

[array_pop](http://php.net/manual/en/function.array-pop.php)
: ~~~php
 mixed array_pop ( array &$array )
~~~

[array_reverse](http://php.net/manual/en/function.array-reverse.php)
: ~~~php
 array array_reverse ( array $array [, bool $preserve_keys = false ] )
~~~

[array_walk](http://php.net/manual/en/function.array-walk.php)
: ~~~php
 bool array_walk ( array &$array , callable $callback [, mixed $userdata = NULL ] )
~~~

[count](http://php.net/manual/en/function.count.php)
: ~~~php
 int count ( mixed $array_or_countable [, int $mode = COUNT_NORMAL ] )
~~~

[in_array](http://php.net/manual/en/function.in-array.php)
: ~~~php
 bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )
~~~

## Date and Time
[date](http://php.net/manual/en/function.date.php)
: ~~~php
 string date ( string $format [, int $timestamp = time() ] )
~~~

[mktime](http://php.net/manual/en/function.mktime.php)
: ~~~php
int mktime ([ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date("Y") [, int $is_dst = -1 ]]]]]]] )
~~~

[strtotime](http://php.net/manual/en/function.strtotime.php)
: ~~~php
 int strtotime ( string $time [, int $now = time() ] )
~~~

[time](http://php.net/manual/en/function.time.php)
: ~~~php
 int time ( void )
~~~

[date_create_from_format](http://php.net/manual/en/datetime.createfromformat.php)
: ~~~php
 DateTime date_create_from_format ( string $format , string $time [, DateTimeZone $timezone ] )
~~~

[date_format](http://php.net/manual/en/datetime.format.php)
: ~~~php
 string date_format ( DateTimeInterface $object , string $format )
~~~

> Localization class: [IntlDateFormatter](http://php.net/manual/en/class.intldateformatter.php)

## Filesystem
[copy](http://php.net/manual/en/function.copy.php)
: ~~~php
 bool copy ( string $source , string $dest [, resource $context ] )
~~~

[fclose](http://php.net/manual/en/function.fclose.php)
: ~~~php
bool fclose ( resource $handle )
~~~

[fgets](http://php.net/manual/en/function.fgets.php)
: ~~~php
string fgets ( resource $handle [, int $length ] )
~~~

[file](http://php.net/manual/en/function.file.php)
: ~~~php
array file ( string $filename [, int $flags = 0 [, resource $context ]] )
~~~

[file_exists](http://php.net/manual/en/function.file-exists.php)
: ~~~php
bool file_exists ( string $filename )
~~~

[file_get_contents](http://php.net/manual/en/function.file-get-contents.php)
: ~~~php
 string file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] )
~~~

[file_put_contents](http://php.net/manual/en/function.file-put-contents.php)
: ~~~php
int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )
~~~

[filemtime](http://php.net/manual/en/function.filemtime.php)
: ~~~php
int filemtime ( string $filename )
~~~

[filesize](http://php.net/manual/en/function.filesize.php)
: ~~~php
int filesize ( string $filename )
~~~

[fopen](http://php.net/manual/en/function.fopen.php)
: ~~~php
 resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )
~~~

[glob](http://php.net/manual/en/function.glob.php)
: ~~~php
 array glob ( string $pattern [, int $flags = 0 ] )
~~~

[is_dir](http://php.net/manual/en/function.is-dir.php)
: ~~~php
bool is_dir ( string $filename )
~~~

[is_file](http://php.net/manual/en/function.is-file.php)
: ~~~php
 bool is_file ( string $filename )
~~~

[is_writable](http://php.net/manual/en/function.is-writable.php)
: ~~~php
 bool is_writable ( string $filename )
~~~

[readfile](http://php.net/manual/en/function.readfile.php)
: ~~~php
 int readfile ( string $filename [, bool $use_include_path = false [, resource $context ]] )
~~~

## Headers
[header](http://php.net/manual/en/function.header.php)
: ~~~php
 void header ( string $string [, bool $replace = true [, int $http_response_code ]] )
~~~

[setcookie](http://php.net/manual/en/function.setcookie.php)
: ~~~php
 bool setcookie ( string $name [, string $value = "" [, int $expire = 0 [, string $path = "" [, string $domain = "" [, bool $secure = false [, bool $httponly = false ]]]]]] )
~~~

## Numbers
[ceil](http://php.net/manual/en/function.ceil.php)
: ~~~php
 float ceil ( float $value )
~~~

[floor](http://php.net/manual/en/function.floor.php)
: ~~~php
 mixed floor ( float $value )
~~~

[number_format](http://php.net/manual/en/function.number-format.php)
: ~~~php
string number_format ( float $number , int $decimals = 0 , string $dec_point = "." , string $thousands_sep = "," )
~~~

[round](http://php.net/manual/en/function.round.php)
: ~~~php
 float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] )
~~~

> Localization class: [NumberFormatter](http://php.net/manual/en/class.numberformatter.php)

> Big numbers functions: [BC Math Functions](http://php.net/manual/en/ref.bc.php)

## PHP Options
[ini_restore](http://php.net/manual/en/function.ini-restore.php)
: ~~~php
void ini_restore ( string $varname )
~~~

[ini_set](http://php.net/manual/en/function.ini-set.php)
: ~~~php
string ini_set ( string $varname , string $newvalue )
~~~

[phpinfo](http://php.net/manual/en/function.phpinfo.php)
: ~~~php
 bool phpinfo ([ int $what = INFO_ALL ] )
~~~

## Regex
[preg_match](http://php.net/manual/en/function.preg-match.php)
: ~~~php
 int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] )
~~~

[preg_match_all](http://php.net/manual/en/function.preg-match-all.php)
: ~~~php
 int preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] )
~~~

[preg_replace](http://php.net/manual/en/function.preg-replace.php)
: ~~~php
 mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )
~~~

[preg_split](http://php.net/manual/en/function.preg-split.php)
: ~~~php
array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )
~~~


## Sessions
[session_destroy](http://php.net/manual/en/function.session-destroy.php)
: ~~~php
 bool session_destroy ( void )
~~~

[session_id](http://php.net/manual/en/function.session-id.php)
: ~~~php
 string session_id ([ string $id ] )
~~~

[session_start](http://php.net/manual/en/function.session-start.php)
: ~~~php
 bool session_start ([ array $options = [] ] )
~~~

## Strings
[addslashes](http://php.net/manual/en/function.addslashes.php)
: ~~~php
 string addslashes ( string $str )
~~~

[crypt](http://php.net/manual/en/function.crypt.php)
: ~~~php
 string crypt ( string $str [, string $salt ] )
~~~

[echo](http://php.net/manual/en/function.echo.php)
: ~~~php
 void echo ( string $arg1 [, string $... ] )
~~~

[explode](http://php.net/manual/en/function.explode.php)
: ~~~php
 array explode ( string $delimiter , string $string [, int $limit ] )
~~~

[implode](http://php.net/manual/en/function.implode.php)
: ~~~php
 string implode ( string $glue , array $pieces )
~~~

[md5](http://php.net/manual/en/function.md5.php)
: ~~~php
 string md5 ( string $str [, bool $raw_output = false ] )
~~~

[nl2br](http://php.net/manual/en/function.nl2br.php)
: ~~~php
 string nl2br ( string $string [, bool $is_xhtml = true ] )
~~~

[sprintf](http://php.net/manual/en/function.sprintf.php)
: ~~~php
 string sprintf ( string $format [, mixed $args [, mixed $... ]] )
~~~

[strip_tags](http://php.net/manual/en/function.strip-tags.php)
: ~~~php
 string strip_tags ( string $str [, string $allowable_tags ] )
~~~

[stripslashes](http://php.net/manual/en/function.stripslashes.php)
: ~~~php
 string stripslashes ( string $str )
~~~

[str_pad](http://php.net/manual/en/function.str-pad.php)
: ~~~php
 string str_pad ( string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]] )
~~~

[strstr](http://php.net/manual/en/function.strstr.php)
: ~~~php
 string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] )
~~~

[strpos](http://php.net/manual/en/function.strpos.php)
: ~~~php
 mixed strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )
~~~

[strrev](http://php.net/manual/en/function.strrev.php)
: ~~~php
 string strrev ( string $string )
~~~

[str_replace](http://php.net/manual/en/function.str-replace.php)
: ~~~php
 mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )
~~~

[strtolower](http://php.net/manual/en/function.strtolower.php)
: ~~~php
 string strtolower ( string $string )
~~~

[strtoupper](http://php.net/manual/en/function.strtoupper.php)
: ~~~php
 string strtoupper ( string $string )
~~~

[substr](http://php.net/manual/en/function.substr.php)
: ~~~php
 string substr ( string $string , int $start [, int $length ] )
~~~

[trim](http://php.net/manual/en/function.trim.php)
: ~~~php
 string trim ( string $str [, string $character_mask = " \t\n\r\0\x0B" ] )
~~~

[ucfirst](http://php.net/manual/en/function.ucfirst.php)
: ~~~php
 string ucfirst ( string $str )
~~~

[ucwords](http://php.net/manual/en/function.ucwords.php)
: ~~~php
 string ucwords ( string $str [, string $delimiters = " \t\r\n\f\v" ] )
~~~


## URLs
[urldecode](http://php.net/manual/en/function.urldecode.php)
: ~~~php
 string urldecode ( string $str )
~~~

[urlencode](http://php.net/manual/en/function.urlencode.php)
: ~~~php
 string urlencode ( string $str )
~~~


## Variables
[empty](http://php.net/manual/en/function.empty.php)
: ~~~php
 bool empty ( mixed $var )
~~~

[is_array](http://php.net/manual/en/function.is-array.php)
: ~~~php
 bool is_array ( mixed $var )
~~~

[is_int](http://php.net/manual/en/function.is-int.php)
: ~~~php
 bool is_int ( mixed $var )
~~~

[is_null](http://php.net/manual/en/function.is-null.php)
: ~~~php
 bool is_null ( mixed $var )
~~~

[is_numeric](http://php.net/manual/en/function.is-numeric.php)
: ~~~php
 bool is_numeric ( mixed $var )
~~~

[is_object](http://php.net/manual/en/function.is-object.php)
: ~~~php
 bool is_object ( mixed $var )
~~~

[isset](http://php.net/manual/en/function.isset.php)
: ~~~php
 bool isset ( mixed $var [, mixed $... ] )
~~~

[serialize](http://php.net/manual/en/function.serialize.php)
: ~~~php
 string serialize ( mixed $value )
~~~

[unserialize](http://php.net/manual/en/function.unserialize.php)
: ~~~php
 mixed unserialize ( string $str [, array $options ] )
~~~

## Miscellaneous
[mail](http://php.net/manual/en/function.mail.php)
: ~~~php
 bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] )
~~~

[fsockopen](http://php.net/manual/en/function.fsockopen.php)
: ~~~php
 resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] )
~~~

[exec](http://php.net/manual/en/function.exec.php)
: ~~~php
 string exec ( string $command [, array &$output [, int &$return_var ]] )
~~~

[define](http://php.net/manual/en/function.define.php)
: ~~~php
 bool define ( string $name , mixed $value [, bool $case_insensitive = false ] )
~~~

[eval](http://php.net/manual/en/function.eval.php)
: ~~~php
 mixed eval ( string $code )
~~~

[exit](http://php.net/manual/en/function.exit.php)
: ~~~php
 void exit ([ string $status ] )
~~~

## SuperGlobals
* [$_ENV](http://php.net/manual/en/reserved.variables.environment.php)
* [$_GET](http://php.net/manual/en/reserved.variables.get.php)
* [$_POST](http://php.net/manual/en/reserved.variables.post.php)
* [$_COOKIE](http://php.net/manual/en/reserved.variables.cookies.php)
* [$_SESSION](http://php.net/manual/en/reserved.variables.session.php)
* [$_SERVER](http://php.net/manual/en/reserved.variables.server.php)
* [$_FILES](http://php.net/manual/en/reserved.variables.files.php)
* [$_REQUEST](http://php.net/manual/en/reserved.variables.request.php)
* [$GLOBALS](http://php.net/manual/en/reserved.variables.globals.php)

## External classes

> pdf library: [fpdf](http://www.fpdf.org/)

<br />

---
<br />

# Visor de logs de PHP

1. Añadir la siguiente línea en `php.ini` para separar los logs de php en su propio fichero de logs:
: ~~~bash
    error_log = /var/log/phplog
~~~

2. Dar permisos al fichero de log:
: ~~~bash
$ sudo touch /var/log/phplog
$ sudo chown www-data:www-data /var/log/phplog
~~~

3. Reiniciar Apache para que coja la configuración correctamente:
: ~~~bash
    $ sudo /etc/init.d/apache2 restart
~~~

4. Instalar `guake` o similar (consola tipo quake):
: ~~~bash
    $ sudo apt-get install guake
~~~

5. Crear script notifyphplog.sh
: ~~~bash
#!/bin/bash
while inotifywait -e close_write /var/log/phplog; do guake -s 0; guake --show; done > /dev/null 2>&1 &
~~~

6. Ejecutar script anterior y guake en el arranque
: ~~~bash
$ cp /usr/share/applications/guake.desktop ~/.config/autostart/
$ cp ~/bin/notifyphplog.sh ~/.config/autostart/
~~~

7. Ejecutar `tail` + `ccze` para obtener la salida con colores y en tiempo real:
: ~~~bash
    $ tail -f phplog | ccze
~~~

<br />

---
<br />

# PHP Profiler

1. Activar profiler de xdebug (desactivar siempre en producción). Añadir la siguiente línea en `xdebug.ini` (`$ locate xdebug.ini`) y reiniciar apache:

    `xdebug.profiler_enable=on`

2. Instalar visor de los dumps del profiler (ficheros `cachegrind.out.*` que se generan automáticamente en `/tmp`):

    `sudo apt-get install kcachegrind`
    
<br />

---
<br />

# Refrescar navegador

### Recargar al guardar cualquier fichero en $HOME/workspace

Instalar paquetes
: ~~~bash
$ sudo apt-get install xdotool inotify-tools
~~~

Crear y ejecutar el siguiente script
: ~~~bash
#!/bin/bash
while inotifywait -e close_write -r $HOME/workspace; do
    WID=`xdotool search --title "Mozilla Firefox" | head -1`
    xdotool windowactivate $WID
    xdotool key F5
done > /dev/null 2>&1 &
~~~

### Recargar desde Vim
Añadir la siguiente línea al fichero $HOME/.vimrc
: ~~~vim
    map <leader>f :silent !WID=`xdotool search --name "Mozilla Firefox" \| head -1`; xdotool windowactivate $WID > /dev/null 2>&1 ; xdotool key F5 > /dev/null 2>&1<CR> \ | execute ':redraw!'
~~~
> requiere paquete `xdotool`

